@model ThoiTrangNam.Models.ProductViewModel
@{
    ViewData["Title"] = "Shop";
}
<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">
            
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div>
                        </div>
                        <div class="ml-2">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle"
                                        data-toggle="dropdown">
                                    Sorting Price
                                </button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="/Home/Shop?orderBy=1">Low to high</a>
                                    <a class="dropdown-item" href="/Home/Shop?orderBy=2">High to low</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @foreach(var item in Model.Products)
                {
                    <div class="col-lg-4 col-md-6 col-sm-6 pb-1">
                        <div class="product-item bg-light mb-4">
                            <div class="product-img position-relative overflow-hidden">
                                <img class="img-fluid w-100" src="@item.ImageUrl" alt="" style="height:550px;">
                                <div class="product-action">
                                    <a class="btn btn-outline-dark btn-square" asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@item.ProductId">
                                        <i class="fa fa-shopping-cart"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="text-center py-4">
                                <a class="h6 text-decoration-none text-truncate" asp-action="Details" asp-route-id="@item.ProductId">
                                    @if (!string.IsNullOrEmpty(item.ProductName) && item.ProductName.Length > 40)
                                    {
                                        string parameterValue = item.ProductName.ToString().Substring(0, 37);

                                        @Html.DisplayFor(modelItem => parameterValue)

                                        @:...
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.ProductName)
                                    }
                                </a>
                                <div class="d-flex align-items-center justify-content-center mt-2">
                                    <h5>@item.SellPrice.ToString("#,##0") VNĐ</h5>
                                </div>
                                <div class="d-flex align-items-center justify-content-center mb-1">
                                    <small class="fa fa-star text-primary mr-1"></small>
                                    <small class="fa fa-star text-primary mr-1"></small>
                                    <small class="fa fa-star text-primary mr-1"></small>
                                    <small class="fa fa-star text-primary mr-1"></small>
                                    <small class="fa fa-star text-primary mr-1"></small>
                                    <small>(99)</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-12">
                    <nav>
                        <ul class="pagination justify-content-center">
                            @if(Model.CurrentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" href="/Home/Shop?currentPage=@(Model.CurrentPage-1)">Previous</a></li>
                            }
                            @for(int i = 1; i<=Model.TotalPages; i++){
                                if(i == Model.CurrentPage)
                                {
                                    <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                                }
                                else
                                {
                                    <li class="page-item"><a class="page-link" href="/Home/Shop?currentPage=@i">@i</a></li>
                                }
                            }
                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item"><a class="page-link" href="/Home/Shop?currentPage=@(Model.CurrentPage+1)">Next</a></li>
                            }
                            
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var paginationLinks = document.querySelectorAll('.pagination a.page-link');
        var sortingLinks = document.querySelectorAll('.dropdown-menu a.dropdown-item');

        paginationLinks.forEach(function (link) {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                var currentUrl = window.location.href;
                var page = event.target.getAttribute('href').split('=')[1]; // Lấy số trang từ href của liên kết được chọn

                // Kiểm tra xem có các tham số truy vấn hiện có không
                var params = new URLSearchParams(window.location.search);
                // Thêm tham số truy vấn mới vào
                params.set('currentPage', page);
                // Tạo URL mới với tất cả các tham số
                var newUrl = currentUrl.split('?')[0] + '?' + params.toString();

                window.location.href = newUrl;
            });
        });

        sortingLinks.forEach(function (link) {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                var currentUrl = window.location.href;
                var order = event.target.getAttribute('href').split('=')[1]; // Lấy thứ tự sắp xếp từ href của liên kết được chọn

                // Kiểm tra xem có các tham số truy vấn hiện có không
                var params = new URLSearchParams(window.location.search);
                // Thêm tham số truy vấn mới vào
                params.set('orderBy', order);
                // Tạo URL mới với tất cả các tham số
                var newUrl = currentUrl.split('?')[0] + '?' + params.toString();

                window.location.href = newUrl;
            });
        });
    });
</script>
